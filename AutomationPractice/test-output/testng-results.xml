<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="398579" started-at="2019-08-14T22:59:32Z" finished-at="2019-08-14T23:06:10Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="398579" started-at="2019-08-14T22:59:32Z" finished-at="2019-08-14T23:06:10Z">
      <class name="com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="beforeSuite" is-config="true" duration-ms="137" started-at="2019-08-14T22:59:32Z" finished-at="2019-08-14T22:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="beforeTest" is-config="true" duration-ms="1217" started-at="2019-08-14T22:59:32Z" finished-at="2019-08-14T22:59:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="beforeClass" is-config="true" duration-ms="3" started-at="2019-08-14T22:59:33Z" finished-at="2019-08-14T22:59:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="registerUsersFromDataFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="registerUsersFromDataFile" duration-ms="397256" started-at="2019-08-14T22:59:33Z" data-provider="getRegistrationData" finished-at="2019-08-14T23:06:10Z">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: registerUsersFromDataFile([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) test,(java.lang.String) user1,(java.lang.String) password,(java.lang.Double) 12345.0,(java.lang.String) Nairobi,(java.lang.Double) 1010.0,(java.lang.String) United States,(java.lang.Double) 1.2345678E7]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: registerUsersFromDataFile([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) test,(java.lang.String) user1,(java.lang.String) password,(java.lang.Double) 12345.0,(java.lang.String) Nairobi,(java.lang.Double) 1010.0,(java.lang.String) United States,(java.lang.Double) 1.2345678E7]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUsersFromDataFile -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="beforeMethod" is-config="true" duration-ms="114" started-at="2019-08-14T23:04:57Z" finished-at="2019-08-14T23:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest.registerUsersFromDataFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="registerUsersFromDataFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="registerUsersFromDataFile" duration-ms="65726" started-at="2019-08-14T23:04:57Z" data-provider="getRegistrationData" finished-at="2019-08-14T23:06:03Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
            <param index="6">
              <value is-null="true"/>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.sendKeys(Unknown Source)
at com.AutomationPractice.pageobject.RegistrationPage.registerUserWithTestData(RegistrationPage.java:346)
at com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest.registerUsersFromDataFile(RegistrationPageTest.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUsersFromDataFile -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="afterMethod" is-config="true" duration-ms="306" started-at="2019-08-14T23:06:10Z" finished-at="2019-08-14T23:06:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerUsersFromDataFile status=FAILURE method=RegistrationPageTest.registerUsersFromDataFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest@3e694b3f]" name="afterTest" is-config="true" duration-ms="83" started-at="2019-08-14T23:06:10Z" finished-at="2019-08-14T23:06:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.AutomationPractice.testscripts.registrationpage.RegistrationPageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
